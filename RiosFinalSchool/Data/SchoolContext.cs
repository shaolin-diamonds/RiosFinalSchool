// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using RiosFinalSchool.Models;

namespace RiosFinalSchool.Data
{
    public partial class SchoolContext : DbContext
    {
        public SchoolContext()
        {
        }

        public SchoolContext(DbContextOptions<SchoolContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Assignment> Assignments { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Student> Students { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Assignment>(entity =>
            {
                entity.HasKey(e => e.AssignId)
                    .HasName("PK_Class");

                entity.ToTable("Assignment");

                entity.HasIndex(e => e.StudentId, "UQ__Assignme__2A33069B33900FD3")
                    .IsUnique();

                entity.HasIndex(e => e.AssignId, "UQ__Assignme__32E5EDE797B46ED4")
                    .IsUnique();

                entity.HasIndex(e => e.CourseId, "UQ__Assignme__8F1EF7AFF680C326")
                    .IsUnique();

                entity.Property(e => e.AssignId)
                    .ValueGeneratedNever()
                    .HasColumnName("assign_id");

                entity.Property(e => e.AssignName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("assign_name");

                entity.Property(e => e.AssignPoints).HasColumnName("assign_points");

                entity.Property(e => e.CourseId).HasColumnName("course_id");

                entity.Property(e => e.StudentId).HasColumnName("student_id");

                entity.HasOne(d => d.Course)
                    .WithOne(p => p.Assignment)
                    .HasForeignKey<Assignment>(d => d.CourseId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Course");

                entity.HasOne(d => d.Student)
                    .WithOne(p => p.Assignment)
                    .HasForeignKey<Assignment>(d => d.StudentId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Student");
            });

            modelBuilder.Entity<Course>(entity =>
            {
                entity.ToTable("Course");

                entity.HasIndex(e => e.CourseId, "UQ__Course__8F1EF7AF3131517C")
                    .IsUnique();

                entity.HasIndex(e => e.InstructorId, "UQ__Course__A1EF56E9A848C25F")
                    .IsUnique();

                entity.Property(e => e.CourseId)
                    .ValueGeneratedNever()
                    .HasColumnName("course_id");

                entity.Property(e => e.CourseName)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("course_name");

                entity.Property(e => e.CoursePrice).HasColumnName("course_price");

                entity.Property(e => e.CourseSubject)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("course_subject");

                entity.Property(e => e.InstructorId).HasColumnName("instructor_id");

                entity.HasOne(d => d.Instructor)
                    .WithOne(p => p.Course)
                    .HasForeignKey<Course>(d => d.InstructorId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Shirt");
            });

            modelBuilder.Entity<Instructor>(entity =>
            {
                entity.ToTable("Instructor");

                entity.HasIndex(e => e.InstructorId, "UQ__Instruct__A1EF56E986E0D7DF")
                    .IsUnique();

                entity.Property(e => e.InstructorId)
                    .ValueGeneratedNever()
                    .HasColumnName("instructor_id");

                entity.Property(e => e.InstructorEmail)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("instructor_email");

                entity.Property(e => e.InstructorFname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("instructor_fname");

                entity.Property(e => e.InstructorLname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("instructor_lname");

                entity.Property(e => e.InstructorStatus).HasColumnName("instructor_status");
            });

            modelBuilder.Entity<Student>(entity =>
            {
                entity.ToTable("Student");

                entity.HasIndex(e => e.StudentId, "UQ__Student__2A33069BE23C7858")
                    .IsUnique();

                entity.Property(e => e.StudentId)
                    .ValueGeneratedNever()
                    .HasColumnName("student_id");

                entity.Property(e => e.StudentEmail)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("student_email");

                entity.Property(e => e.StudentFname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("student_fname");

                entity.Property(e => e.StudentLname)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("student_lname");

                entity.Property(e => e.StudentZipcode)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("student_zipcode");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}